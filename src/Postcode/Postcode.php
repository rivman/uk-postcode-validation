<?php
/**
 * Postcode.php
 *
 * @author: Dean Haines
 * @copyright: Dean Haines, 2018, UK
 * @license: MIT See LICENSE.md
 */

namespace vbpupil\Postcode;

use Exception;

/**
 * Class Postcode
 * @package vbpupil
 */
class Postcode
{

    /**
     * @var string
     */
    protected $postcode;

    /**
     * @var null
     */
    protected $type = NULL;

    public function __construct($code)
    {
        $this->type = $this->validate($code);
    }

    /**
     * @param $code
     * @return null|string
     * @throws Exception
     */
    public function validate($code = null)
    {
        if (is_null($code) || $code == '') {
            throw new Exception('Empty Postcode.');
        }

        if (!is_string($code)) {
            throw new Exception('Non string value passed.');
        }

        //regularizes postcode by removing spaces and pushing to uppercase
        $this->postcode = preg_replace('/\s+/', '', strtoupper($code));

        if (!$this->isValid()) {
            throw new Exception('Invalid Postcode.');
        }

        //performs a postcode lookup to identify where this postcode is geographically
        $this->identify();

        if (is_null($this->type)) {
            throw new Exception('Non recognised postcode.');
        }
    }

    /**
     * Note Scottish Highland is NOT Scotland
     *
     * We return after each lookup because UK Mainland do have some overlap ie
     * PO31 isle of white - PO3 Portsmouth
     *
     * @return null|string
     */
    protected function identify()
    {
        if ($this->isScottishHighland()) {
            $this->type = 'SCOTTISH_HIGHLAND';
            return $this->type;
        }

        if ($this->isNorthernIre()) {
            $this->type = 'NORTHERN_IRE';
            return $this->type;
        }

        if ($this->isIsleOfMan()) {
            $this->type = 'ISLE_OF_MAN';
            return $this->type;
        }

        if ($this->isIsleOfWight()) {
            $this->type = 'ISLE_OF_WIGHT';
            return $this->type;
        }

        if ($this->isUKMainland()) {
            $this->type = 'UK_MAINLAND';
            return $this->type;
        }
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * @return bool
     */
    protected function isValid()
    {
        return (bool)preg_match(
            '~^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})$~',
            $this->postcode
        );
    }

    /**
     * @return bool
     */
    protected function isScottishHighland()
    {
        return (bool)preg_match(
            '/^(HS1|IV15|IV36|KA27|KW17|PA36|PA63|PH18|PH38|HS2|IV16|IV40|KA28|PA20|PA37|PA64|PH19|PH39|HS3|IV17|IV41|KW1|PA21|PA38|PA65|PH20|PH40|HS4|IV18|IV42|KW2|PA22|PA39|PA66|PH21|PH41|HS5|IV19|IV43|KW3|PA23|PA40|PA67|PH22|PH42|HS6|IV20|IV44|KW5|PA24|PA41|PA68|PH23|PH43|HS7|IV21|IV45|KW6|PA25|PA42|PA69|PH24|PH44|HS8|IV22|IV46|KW7|PA26|PA43|PA70|PH25|PH49|HS9|IV23|IV47|KW8|PA27|PA44|PA71|PH26|PH50|IV1|IV24|IV48|KW9|PA28|PA45|PA72|PH30|ZE1|IV2|IV25|IV49|KW10|PA29|PA46|PA73|PH31|ZE2|IV3|IV26|IV51|KW11|PA30|PA47|PA74|PH32|ZE3|IV10|IV27|IV52|KW12|PA31|PA48|PA75|PH33|IV11|IV28|IV53|KW13|PA32|PA49|PA76|PH34|IV12|IV30|IV54|KW14|PA33|PA60|PA77|PH35|IV13|IV31|IV55|KW15|PA34|PA61|PA78|PH36|IV14|IV32|IV56|KW16|PA35|PA62|PH17|PH37)/',
            $this->postcode
        );
    }

    /**
     * @return bool
     */
    protected function isNorthernIre()
    {
        return (bool)preg_match(
            '/^(BT1|BT12|BT23|BT34|BT45|BT57|BT70|BT92|BT2|BT13|BT24|BT35|BT46|BT60|BT71|BT93|BT3|BT14|BT25|BT36|BT47|BT61|BT74|BT94|BT4|BT15|BT26|BT37|BT48|BT62|BT75|BT99|BT5|BT16|BT27|BT38|BT49|BT63|BT76|BT6|BT17|BT28|BT39|BT51|BT64|BT77|BT7|BT18|BT29|BT40|BT52|BT65|BT78|BT8|BT19|BT30|BT41|BT53|BT66|BT79|BT9|BT20|BT31|BT42|BT54|BT67|BT80|BT10|BT21|BT32|BT43|BT55|BT68|BT81|BT11|BT22|BT33|BT44|BT56|BT69|BT82)/',
            $this->postcode
        );
    }

    /**
     * @return bool
     */
    protected function isIsleOfMan()
    {
        //note, also checks for isle of scilly
        return (bool)preg_match(
            '/^(IM1|IM2|IM3|IM4|IM5|IM6|IM7|IM8|IM9|IM99|TR21|TR22|TR23|TR24|TR25)/',
            $this->postcode
        );
    }

    /**
     * @return bool
     */
    protected function isUKMainland()
    {
        //note, excludes scottish highlands
        return (bool)preg_match(
            '/^(AB10|AB56|B20|B64|BA7|BD7|BH12|BN9|BR5|AB11|AK99|B21|B65|BA8|BD8|BH13|BN10|BR6|AB12|AL1|B23|B66|BA9|BD9|BH14|BN11|BR7|AB13|AL2|B24|B67|BA10|BD10|BH15|BN12|BR8|AB14|AL3|B25|B68|BA11|BD11|BH16|BN13|BS0|AB15|AL4|B26|B69|BA12|BD12|BH17|BN14|BS1|AB16|AL5|B27|B70|BA13|BD13|BH18|BN15|BS2|AB21|AL6|B28|B71|BA14|BD14|BH19|BN16|BS3|AB22|AL7|B29|B72|BA15|BD15|BH20|BN17|BS4|AB23|AL8|B30|B73|BA16|BD16|BH21|BN18|BS5|AB24|AL9|B31|B74|BA20|BD17|BH22|BN20|BS6|AB25|AL10|B32|B75|BA21|BD18|BH23|BN21|BS7|AB30|AQ99|B33|B76|BA22|BD19|BH24|BN22|BS8|AB31|B1|B34|B77|BB1|BD20|BH25|BN23|BS9|AB32|B2|B35|B78|BB2|BD21|BH31|BN24|BS10|AB33|B3|B36|B79|BB3|BD22|BL0|BN25|BS11|AB34|B4|B37|B80|BB4|BD23|BL1|BN26|BS13|AB35|B5|B38|B90|BB5|BD24|BL2|BN27|BS14|AB36|B6|B40|B91|BB6|BD97|BL3|BN41|BS15|AB37|B7|B42|B92|BB7|BD98|BL4|BN42|BS16|AB38|B8|B43|B93|BB8|BD99|BL5|BN43|BS20|AB39|B9|B44|B94|BB9|BH1|BL6|BN44|BS21|AB41|B10|B45|B95|BB10|BH2|BL7|BN45|BS22|AB42|B11|B46|B96|BB11|BH3|BL8|BN50|BS23|AB43|B12|B47|B97|BB12|BH4|BL9|BN51|BS24|AB44|B13|B48|B98|BB18|BH5|BN1|BN52|BS25|AB45|B14|B49|BA1|BD1|BH6|BN2|BN88|BS26|AB51|B15|B50|BA2|BD2|BH7|BN3|BN99|BS27|AB52|B16|B60|BA3|BD3|BH8|BN5|BR1|BS28|AB53|B17|B61|BA4|BD4|BH9|BN6|BR2|BS29|AB54|B18|B62|BA5|BD5|BH10|BN7|BR3|BS30|AB55|B19|B63|BA6|BD6|BH11|BN8|BR4|BS31|BS32|CA25|CF43|CH43|CM21|CT5|CV33|DA17|DE99|BS34|CA26|CF44|CH44|CM22|CT6|CV34|DA18|DG1|BS35|CA27|CF45|CH45|CM23|CT7|CV35|DD1|DG2|BS36|CA28|CF46|CH46|CM24|CT8|CV36|DD2|DG3|BS37|CB1|CF47|CH47|CM77|CT9|CV37|DD3|DG4|BS39|CB2|CF48|CH48|CM99|CT10|CV47|DD4|DG5|BS40|CB3|CF61|CH49|CO1|CT11|CV98|DD5|DG6|BS41|CB4|CF62|CH60|CO2|CT12|CV99|DD6|DG7|BS48|CB5|CF63|CH61|CO3|CT13|CW1|DD7|DG8|BS49|CB6|CF64|CH62|CO4|CT14|CW2|DD8|DG9|BS98|CB7|CF71|CH63|CO5|CT15|CW3|DD9|DG10|BS99|CB8|CF72|CH64|CO6|CT16|CW4|DD10|DG11|CA1|CB9|CF81|CH65|CO7|CT17|CW5|DD11|DG12|CA2|CB10|CF82|CH66|CO8|CT18|CW6|DE1|DG13|CA3|CB11|CF83|CH88|CO9|CT19|CW7|DE3|DG14|CA4|CF3|CF99|CH99|CO10|CT20|CW8|DE4|DG16|CA5|CF5|CH1|CM0|CO11|CT21|CW9|DE5|DH1|CA6|CF10|CH2|CM1|CO12|CT50|CW10|DE6|DH2|CA7|CF11|CH3|CM2|CO13|CV1|CW11|DE7|DH3|CA8|CF14|CH4|CM3|CO14|CV2|CW12|DE11|DH4|CA9|CF15|CH5|CM4|CO15|CV3|DA1|DE12|DH5|CA10|CF23|CH6|CM5|CO16|CV4|DA2|DE13|DH6|CA11|CF24|CH7|CM6|CR0|CV5|DA3|DE14|DH7|CA12|CF30|CH8|CM7|CR2|CV6|DA4|DE15|DH8|CA13|CF31|CH25|CM8|CR3|CV7|DA5|DE21|DH9|CA14|CF32|CH26|CM9|CR4|CV8|DA6|DE22|DH98|CA15|CF33|CH27|CM11|CR5|CV9|DA7|DE23|DH99|CA16|CF34|CH28|CM12|CR6|CV10|DA8|DE24|DL1|CA17|CF35|CH29|CM13|CR7|CV11|DA9|DE45|DL2|CA18|CF36|CH30|CM14|CR8|CV12|DA10|DE55|DL3|CA19|CF37|CH31|CM15|CR9|CV13|DA11|DE56|DL4|CA20|CF38|CH32|CM16|CR44|CV21|DA12|DE65|DL5|CA21|CF39|CH33|CM17|CT1|CV22|DA13|DE72|DL6|CA22|CF40|CH34|CM18|CT2|CV23|DA14|DE73|DL7|CA23|CF41|CH41|CM19|CT3|CV31|DA15|DE74|DL8|CA24|CF42|CH42|CM20|CT4|CV32|DA16|DE75|DL9|DL10|DN38|E8|EC4P|EH33|EX4|FK7|G21|G78|DL11|DN39|E9|EC4R|EH34|EX5|FK8|G22|G79|DL12|DN40|E10|EC4V|EH35|EX6|FK9|G23|G80|DL13|DN41|E11|EC4Y|EH36|EX7|FK10|G31|G81|DL14|DT1|E12|EH1|EH37|EX8|FK11|G32|G82|DL15|DT2|E13|EH2|EH38|EX9|FK12|G33|G83|DL16|DT3|E14|EH3|EH39|EX10|FK13|G34|G84|DL17|DT4|E15|EH4|EH40|EX11|FK14|G40|GL1|DN1|DT5|E16|EH5|EH41|EX12|FK15|G41|GL2|DN2|DT6|E17|EH6|EH42|EX13|FK16|G42|GL3|DN3|DT7|E18|EH7|EH43|EX14|FK17|G43|GL4|DN4|DT8|E1W|EH8|EH44|EX15|FK18|G44|GL5|DN5|DT9|EC50|EH9|EH45|EX16|FK19|G45|GL6|DN6|DT10|EC1A|EH10|EH46|EX17|FK20|G46|GL7|DN7|DT11|EC1M|EH11|EH47|EX18|FK21|G51|GL8|DN8|DY1|EC1N|EH12|EH48|EX19|FY0|G52|GL9|DN9|DY2|EC1P|EH13|EH49|EX20|FY1|G53|GL10|DN10|DY3|EC1R|EH14|EH51|EX21|FY2|G58|GL11|DN11|DY4|EC1V|EH15|EH52|EX22|FY3|G60|GL12|DN12|DY5|EC1Y|EH16|EH53|EX23|FY4|G61|GL13|DN14|DY6|EC2A|EH17|EH54|EX24|FY5|G62|GL14|DN15|DY7|EC2M|EH18|EH55|EX31|FY6|G63|GL15|DN16|DY8|EC2N|EH19|EN1|EX32|FY7|G64|GL16|DN17|DY9|EC2P|EH20|EN2|EX33|FY8|G65|GL17|DN18|DY10|EC2R|EH21|EN3|EX34|G1|G66|GL18|DN19|DY11|EC2V|EH22|EN4|EX35|G2|G67|GL19|DN20|DY12|EC2Y|EH23|EN5|EX36|G3|G68|GL20|DN21|DY13|EC3A|EH24|EN6|EX37|G4|G69|GL50|DN22|DY14|EC3M|EH25|EN7|EX38|G5|G70|GL51|DN31|E1|EC3N|EH26|EN8|EX39|G9|G71|GL52|DN32|E2|EC3P|EH27|EN9|FK1|G11|G72|GL53|DN33|E3|EC3R|EH28|EN10|FK2|G12|G73|GL54|DN34|E4|EC3V|EH29|EN11|FK3|G13|G74|GL55|DN35|E5|EC4A|EH30|EX1|FK4|G14|G75|GL56|DN36|E6|EC4M|EH31|EX2|FK5|G15|G76|GU1|DN37|E7|EC4N|EH32|EX3|FK6|G20|G77|GU2|GU3|GU52|HP12|HU15|IP13|KA8|KT16|L11|L74|GU4|HA0|HP13|HU16|IP14|KA9|KT17|L12|L75|GU5|HA1|HP14|HU17|IP15|KA10|KT18|L13|LA1|GU6|HA2|HP15|HU18|IP16|KA11|KT19|L14|LA2|GU7|HA3|HP16|HU19|IP17|KA12|KT20|L15|LA3|GU8|HA4|HP17|HU20|IP18|KA13|KT21|L16|LA4|GU9|HA5|HP18|HX1|IP19|KA14|KT22|L17|LA5|GU10|HA6|HP19|HX2|IP20|KA15|KT23|L18|LA6|GU11|HA7|HP20|HX3|IP21|KA16|KT24|L19|LA7|GU12|HA8|HP21|HX4|IP22|KA17|KY1|L20|LA8|GU13|HA9|HP22|HX5|IP23|KA18|KY2|L21|LA9|GU14|HD1|HP23|HX6|IP24|KA19|KY3|L22|LA10|GU15|HD2|HP27|HX7|IP25|KA20|KY4|L23|LA11|GU16|HD3|HR1|IG1|IP26|KA21|KY5|L24|LA12|GU17|HD4|HR2|IG2|IP27|KA22|KY6|L25|LA13|GU18|HD5|HR3|IG3|IP28|KA23|KY7|L26|LA14|GU19|HD6|HR4|IG4|IP29|KA24|KY8|L27|LA15|GU20|HD7|HR5|IG5|IP30|KA25|KY9|L28|LA16|GU21|HD8|HR6|IG6|IP31|KA26|KY10|L29|LA17|GU22|HD9|HR7|IG7|IP32|KA29|KY11|L30|LA18|GU23|HG1|HR8|IG8|IP33|KA30|KY12|L31|LA19|GU24|HG2|HR9|IG9|IP98|KT1|KY13|L32|LA20|GU25|HG3|HU1|IG10|IV4|KT2|KY14|L33|LA21|GU26|HG4|HU2|IG11|IV5|KT3|KY15|L34|LA22|GU27|HG5|HU3|IP1|IV6|KT4|KY16|L35|LA23|GU28|HP1|HU4|IP2|IV7|KT5|KY99|L36|LD1|GU29|HP2|HU5|IP3|IV8|KT6|L1|L37|LD2|GU30|HP3|HU6|IP4|IV9|KT7|L2|L38|LD3|GU31|HP4|HU7|IP5|IV63|KT8|L3|L39|LD4|GU32|HP5|HU8|IP6|KA1|KT9|L4|L40|LD5|GU33|HP6|HU9|IP7|KA2|KT10|L5|L67|LD6|GU34|HP7|HU10|IP8|KA3|KT11|L6|L68|LD7|GU35|HP8|HU11|IP9|KA4|KT12|L7|L69|LD8|GU46|HP9|HU12|IP10|KA5|KT13|L8|L70|LE1|GU47|HP10|HU13|IP11|KA6|KT14|L9|L72|LE2|GU51|HP11|HU14|IP12|KA7|KT15|L10|L73|LE3|LE4|LL23|LL60|LS5|M2|M43|MK9|N6|NE20|LE5|LL24|LL61|LS6|M3|M44|MK10|N7|NE21|LE6|LL25|LL62|LS7|M4|M45|MK11|N8|NE22|LE7|LL26|LL63|LS8|M5|M46|MK12|N9|NE23|LE8|LL27|LL64|LS9|M6|M50|MK13|N10|NE24|LE9|LL28|LL65|LS10|M7|M60|MK14|N11|NE25|LE10|LL29|LL66|LS11|M8|M90|MK15|N12|NE26|LE11|LL30|LL67|LS12|M9|M99|MK16|N13|NE27|LE12|LL31|LL68|LS13|M11|ME1|MK17|N14|NE28|LE13|LL32|LL69|LS14|M12|ME2|MK18|N15|NE29|LE14|LL33|LL70|LS15|M13|ME3|MK19|N16|NE30|LE15|LL34|LL71|LS16|M14|ME4|MK40|N17|NE31|LE16|LL35|LL72|LS17|M15|ME5|MK41|N18|NE32|LE17|LL36|LL73|LS18|M16|ME6|MK42|N19|NE33|LE18|LL37|LL74|LS19|M17|ME7|MK43|N20|NE34|LE19|LL38|LL75|LS20|M18|ME8|MK44|N21|NE35|LE21|LL39|LL76|LS21|M19|ME9|MK45|N22|NE36|LE41|LL40|LL77|LS22|M20|ME10|MK46|N81|NE37|LE55|LL41|LL78|LS23|M21|ME11|MK77|NE1|NE38|LE65|LL42|LN1|LS24|M22|ME12|ML1|NE2|NE39|LE67|LL43|LN2|LS25|M23|ME13|ML2|NE3|NE40|LE87|LL44|LN3|LS26|M24|ME14|ML3|NE4|NE41|LE94|LL45|LN4|LS27|M25|ME15|ML4|NE5|NE42|LE99|LL46|LN5|LS28|M26|ME16|ML5|NE6|NE43|LL11|LL47|LN6|LS29|M27|ME17|ML6|NE7|NE44|LL12|LL48|LN7|LS88|M28|ME18|ML7|NE8|NE45|LL13|LL49|LN8|LS98|M29|ME19|ML8|NE9|NE46|LL14|LL51|LN9|LS99|M30|ME20|ML9|NE10|NE47|LL15|LL52|LN10|LU1|M31|MK1|ML10|NE11|NE48|LL16|LL53|LN11|LU2|M32|MK2|ML11|NE12|NE49|LL17|LL54|LN12|LU3|M33|MK3|ML12|NE13|NE61|LL18|LL55|LN13|LU4|M34|MK4|N1|NE15|NE62|LL19|LL56|LS1|LU5|M35|MK5|N2|NE16|NE63|LL20|LL57|LS2|LU6|M38|MK6|N3|NE17|NE64|LL21|LL58|LS3|LU7|M40|MK7|N4|NE18|NE65|LL22|LL59|LS4|M1|M41|MK8|N5|NE19|NE66|NE67|NG31|NP22|NR31|OX4|PA12|PE29|PL10|PO10|NE68|NG32|NP23|NR32|OX5|PA13|PE30|PL11|PO11|NE69|NG33|NP24|NR33|OX6|PA14|PE31|PL12|PO12|NE70|NG34|NP25|NR34|OX7|PA15|PE32|PL13|PO13|NE71|NG80|NP26|NR35|OX8|PA16|PE33|PL14|PO14|NE82|NN1|NP44|NW1|OX9|PA17|PE34|PL15|PO15|NE83|NN2|NR1|NW2|OX10|PA18|PE35|PL16|PO16|NE85|NN3|NR2|NW3|OX11|PA19|PE36|PL17|PO17|NE88|NN4|NR3|NW4|OX12|PE1|PE37|PL18|PO18|NE98|NN5|NR4|NW5|OX13|PE2|PE38|PL19|PO19|NE99|NN6|NR5|NW6|OX14|PE3|PE99|PL20|PO20|NG1|NN7|NR6|NW7|OX15|PE4|PH1|PL21|PO21|NG2|NN8|NR7|NW8|OX16|PE5|PH2|PL22|PO22|NG3|NN9|NR8|NW9|OX17|PE6|PH3|PL23|NG4|NN10|NR9|NW10|OX18|PE7|PH4|PL24|NG5|NN11|NR10|NW11|OX20|PE8|PH5|PL25|NG6|NN12|NR11|NW1W|OX25|PE9|PH6|PL26|NG7|NN13|NR12|OL1|OX26|PE10|PH7|PL27|NG8|NN14|NR13|OL2|OX27|PE11|PH8|PL28|NG9|NN15|NR14|OL3|OX28|PE12|PH9|PL29|NG10|NN16|NR15|OL4|OX29|PE13|PH10|PL30|NG11|NN17|NR16|OL5|OX33|PE14|PH11|PL31|NG12|NN18|NR17|OL6|OX39|PE15|PH12|PL32|NG13|NN29|NR18|OL7|OX44|PE16|PH13|PL33|PO40|NG14|NP4|NR19|OL8|OX49|PE17|PH14|PL34|PO41|NG15|NP7|NR20|OL9|PA1|PE18|PH15|PL35|PR0|NG16|NP8|NR21|OL10|PA2|PE19|PH16|PN99|PR1|NG17|NP10|NR22|OL11|PA3|PE20|PL1|PO1|PR2|NG18|NP11|NR23|OL12|PA4|PE21|PL2|PO2|PR3|NG19|NP12|NR24|OL13|PA5|PE22|PL3|PO3|PR4|NG20|NP13|NR25|OL14|PA6|PE23|PL4|PO4|PR5|NG21|NP15|NR26|OL15|PA7|PE24|PL5|PO5|PR6|NG22|NP16|NR27|OL16|PA8|PE25|PL6|PO6|PR7|NG23|NP18|NR28|OX1|PA9|PE26|PL7|PO7|PR8|NG24|NP19|NR29|OX2|PA10|PE27|PL8|PO8|PR9|NG25|NP20|NR30|OX3|PA11|PE28|PL9|PO9|PR25|PR26|RG42|RM15|S49|SA20|SE4|SG12|SL9|SO21|QC11|RG45|RM16|S60|SA31|SE5|SG13|SM1|SO22|QC22|RH1|RM17|S61|SA32|SE6|SG14|SM2|SO23|QC33|RH2|RM18|S62|SA33|SE7|SG15|SM3|SO24|QC44|RH3|RM19|S63|SA34|SE8|SG16|SM4|SO30|QC55|RH4|RM20|S64|SA35|SE9|SG17|SM5|SO31|QC77|RH5|S1|S65|SA36|SE10|SG18|SM6|SO32|QC99|RH6|S2|S66|SA37|SE11|SG19|SM7|SO40|RG1|RH7|S3|S70|SA38|SE12|SK1|SN1|SO41|RG2|RH8|S4|S71|SA39|SE13|SK2|SN2|SO42|RG4|RH9|S5|S72|SA40|SE14|SK3|SN3|SO43|RG5|RH10|S6|S73|SA41|SE15|SK4|SN4|SO45|RG6|RH11|S7|S74|SA42|SE16|SK5|SN5|SO50|RG7|RH12|S8|S75|SA43|SE17|SK6|SN6|SO51|RG8|RH13|S9|S80|SA44|SE18|SK7|SN7|SO52|RG9|RH14|S10|S81|SA45|SE19|SK8|SN8|SO53|RG10|RH15|S11|S98|SA46|SE20|SK9|SN9|SP1|RG12|RH16|S12|SA1|SA47|SE21|SK10|SN10|SP2|RG14|RH17|S13|SA2|SA48|SE22|SK11|SN11|SP3|RG17|RH18|S14|SA3|SA61|SE23|SK12|SN12|SP4|RG18|RH19|S17|SA4|SA62|SE24|SK13|SN13|SP5|RG19|RH20|S18|SA5|SA63|SE25|SK14|SN14|SP6|RG20|RM1|S20|SA6|SA64|SE26|SK15|SN15|SP7|RG21|RM2|S21|SA7|SA65|SE27|SK16|SN16|SP8|RG22|RM3|S25|SA8|SA66|SE28|SK17|SN25|SP9|RG23|RM4|S26|SA9|SA67|SG1|SK22|SN26|SP10|RG24|RM5|S32|SA10|SA68|SG2|SK23|SN38|SP11|RG25|RM6|S33|SA11|SA69|SG3|SL0|SN88|SR1|RG26|RM7|S35|SA12|SA70|SG4|SL1|SN99|SR2|RG27|RM8|S36|SA13|SA71|SG5|SL2|SO14|SR3|RG28|RM9|S40|SA14|SA72|SG6|SL3|SO15|SR4|RG29|RM10|S41|SA15|SA73|SG7|SL4|SO16|SR5|RG30|RM11|S42|SA16|SA99|SG8|SL5|SO17|SR6|RG31|RM12|S43|SA17|SE1|SG9|SL6|SO18|SR7|RG40|RM13|S44|SA18|SE2|SG10|SL7|SO19|SR8|RG41|RM14|S45|SA19|SE3|SG11|SL8|SO20|SR9|SS0|ST19|SY5|TA16|TF13|TN36|TR18|TW2|W7|SS1|ST20|SY6|TA17|TN1|TN37|TR19|TW3|W8|SS2|ST21|SY7|TA18|TN2|TN38|TR20|TW4|W9|SS3|ST55|SY8|TA19|TN3|TN39|TR26|TW5|W10|SS4|SW2|SY9|TA20|TN4|TN40|TR27|TW6|W11|SS5|SW3|SY10|TA21|TN5|TQ1|TS1|TW7|W12|SS6|SW4|SY11|TA22|TN6|TQ2|TS2|TW8|W13|SS7|SW5|SY12|TA23|TN7|TQ3|TS3|TW9|W14|SS8|SW6|SY13|TA24|TN8|TQ4|TS4|TW10|W1A|SS9|SW7|SY14|TD1|TN9|TQ5|TS5|TW11|W1B|SS11|SW8|SY15|TD2|TN10|TQ6|TS6|TW12|W1C|SS12|SW9|SY16|TD3|TN11|TQ7|TS7|TW13|W1D|SS13|SW10|SY17|TD4|TN12|TQ8|TS8|TW14|W1F|SS14|SW11|SY18|TD5|TN13|TQ9|TS9|TW15|W1G|SS15|SW12|SY19|TD6|TN14|TQ10|TS10|TW16|W1H|SS16|SW13|SY20|TD7|TN15|TQ11|TS11|TW17|W1J|SS17|SW14|SY21|TD8|TN16|TQ12|TS12|TW18|W1K|SS99|SW15|SY22|TD9|TN17|TQ13|TS13|TW19|W1S|ST1|SW16|SY23|TD10|TN18|TQ14|TS14|TW20|W1T|ST2|SW17|SY24|TD11|TN19|TR1|TS15|UB1|W1U|ST3|SW18|SY25|TD12|TN20|TR2|TS16|UB2|W1W|ST4|SW19|TA1|TD13|TN21|TR3|TS17|UB3|WA1|ST5|SW20|TA2|TD14|TN22|TR4|TS18|UB4|WA2|ST6|SW99|TA3|TD15|TN23|TR5|TS19|UB5|WA3|ST7|SW1A|TA4|TF1|TN24|TR6|TS20|UB6|WA4|ST8|SW1E|TA5|TF2|TN25|TR7|TS21|UB7|WA5|ST9|SW1H|TA6|TF3|TN26|TR8|TS22|UB8|WA6|ST10|SW1P|TA7|TF4|TN27|TR9|TS23|UB9|WA7|ST11|SW1V|TA8|TF5|TN28|TR10|TS24|UB10|WA8|ST12|SW1W|TA9|TF6|TN29|TR11|TS25|UB11|WA9|ST13|SW1X|TA10|TF7|TN30|TR12|TS26|UB18|WA10|ST14|SW1Y|TA11|TF8|TN31|TR13|TS27|W2|WA11|ST15|SY1|TA12|TF9|TN32|TR14|TS28|W3|WA12|ST16|SY2|TA13|TF10|TN33|TR15|TS29|W4|WA13|ST17|SY3|TA14|TF11|TN34|TR16|TS90|W5|WA14|ST18|SY4|TA15|TF12|TN35|TR17|TW1|W6|WA15|WA16|WC2R|WF4|WN2|WR9|WS7|WV7|YO12|YO31|WC99|WD3|WF5|WN3|WR10|WS8|WV8|YO13|YO32|WC1A|WD4|WF6|WN4|WR11|WS9|WV9|YO14|YO41|WC1B|WD5|WF7|WN5|WR12|WS10|WV10|YO15|YO42|WC1E|WD6|WF8|WN6|WR13|WS11|WV11|YO16|YO43|WC1H|WD7|WF9|WN7|WR14|WS12|WV12|YO17|YO51|WC1N|WD17|WF10|WN8|WR15|WS13|WV13|YO18|YO60|WC1R|WD18|WF11|WR1|WR78|WS14|WV14|YO19|YO61|WC1V|WD19|WF12|WR2|WR99|WS15|WV15|YO21|YO62|WC1X|WD23|WF13|WR3|WS1|WV1|WV16|YO22|YO90|WC2A|WD24|WF14|WR4|WS2|WV2|YO1|YO23|YO91|WC2B|WD25|WF15|WR5|WS3|WV3|YO7|YO24|WC2E|WF1|WF16|WR6|WS4|WV4|YO8|YO25|WC2H|WF2|WF17|WR7|WS5|WV5|YO10|YO26|WC2N|WF3|WN1|WR8|WS6|WV6|YO11|YO30)/',
            $this->postcode
        );
    }

    /**
     * @return bool
     */
    protected function isIsleOfWight()
    {
        return (bool)preg_match(
            '/^(PO30|PO31|PO32|PO33|PO34|PO35|PO36|PO37|PO38|PO39)/',
            $this->postcode
        );
    }
}